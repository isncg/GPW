// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: netmessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GPW.NetMessage {

  /// <summary>Holder for reflection information generated from netmessage.proto</summary>
  public static partial class NetmessageReflection {

    #region Descriptor
    /// <summary>File descriptor for netmessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetmessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBuZXRtZXNzYWdlLnByb3RvEg5HUFcuTmV0TWVzc2FnZSJ6Cg5TZXJ2ZXJJ",
            "bmZvTGlzdBI+CgtzZXJ2ZXJJbmZvcxgBIAMoCzIpLkdQVy5OZXRNZXNzYWdl",
            "LlNlcnZlckluZm9MaXN0LlNlcnZlckluZm8aKAoKU2VydmVySW5mbxIMCgRu",
            "YW1lGAEgASgJEgwKBGRlc2MYAiABKAkisgQKCVNlcnZlck1zZxIpCghkYXRh",
            "VHlwZRgBIAEoDjIXLkdQVy5OZXRNZXNzYWdlLk1zZ1R5cGUSLAoJZXJyb3JU",
            "eXBlGAIgASgOMhkuR1BXLk5ldE1lc3NhZ2UuRXJyb3JUeXBlEhAKCHNlcXVl",
            "bmNlGAMgASgEEjsKCWhlYXJ0QmVhdBhkIAEoCzIjLkdQVy5OZXRNZXNzYWdl",
            "LlNlcnZlck1zZy5IZWFydEJlYXRIAIgBARI5Cghyb2xlSW5mbxhlIAEoCzIi",
            "LkdQVy5OZXRNZXNzYWdlLlNlcnZlck1zZy5Sb2xlSW5mb0gBiAEBEjEKBGl0",
            "ZW0YZiABKAsyHi5HUFcuTmV0TWVzc2FnZS5TZXJ2ZXJNc2cuSXRlbUgCiAEB",
            "Ej8KC2VudGVyQmF0dGxlGGcgASgLMiUuR1BXLk5ldE1lc3NhZ2UuU2VydmVy",
            "TXNnLkVudGVyQmF0dGxlSAOIAQEaMQoJSGVhcnRCZWF0EhAKCHNlcnZlcklE",
            "GAEgASgNEhIKCnNlcnZlclRpbWUYAiABKAQaKAoIUm9sZUluZm8SDgoGcm9s",
            "ZUlEGAEgASgEEgwKBG5hbWUYAiABKAkaEgoESXRlbRIKCgJpZBgBIAEoBBop",
            "CgtFbnRlckJhdHRsZRIMCgRob3N0GAEgASgJEgwKBHBvcnQYAiABKAVCDAoK",
            "X2hlYXJ0QmVhdEILCglfcm9sZUluZm9CBwoFX2l0ZW1CDgoMX2VudGVyQmF0",
            "dGxlIkUKCUNsaWVudE1zZxIpCghkYXRhVHlwZRgBIAEoDjIXLkdQVy5OZXRN",
            "ZXNzYWdlLk1zZ1R5cGUSDQoFcGFyYW0YAiABKAQqPwoHTXNnVHlwZRISCg5N",
            "U0dfSEVBUlRfQkVBVBAAEhEKDU1TR19ST0xFX0lORk8QARINCglNU0dfSVRF",
            "TVMQAiorCglFcnJvclR5cGUSDQoJRVJSX05PRVJSEAASDwoLRVJSX1VOS05P",
            "V04QAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GPW.NetMessage.MsgType), typeof(global::GPW.NetMessage.ErrorType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GPW.NetMessage.ServerInfoList), global::GPW.NetMessage.ServerInfoList.Parser, new[]{ "ServerInfos" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GPW.NetMessage.ServerInfoList.Types.ServerInfo), global::GPW.NetMessage.ServerInfoList.Types.ServerInfo.Parser, new[]{ "Name", "Desc" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GPW.NetMessage.ServerMsg), global::GPW.NetMessage.ServerMsg.Parser, new[]{ "DataType", "ErrorType", "Sequence", "HeartBeat", "RoleInfo", "Item", "EnterBattle" }, new[]{ "HeartBeat", "RoleInfo", "Item", "EnterBattle" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GPW.NetMessage.ServerMsg.Types.HeartBeat), global::GPW.NetMessage.ServerMsg.Types.HeartBeat.Parser, new[]{ "ServerID", "ServerTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GPW.NetMessage.ServerMsg.Types.RoleInfo), global::GPW.NetMessage.ServerMsg.Types.RoleInfo.Parser, new[]{ "RoleID", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GPW.NetMessage.ServerMsg.Types.Item), global::GPW.NetMessage.ServerMsg.Types.Item.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GPW.NetMessage.ServerMsg.Types.EnterBattle), global::GPW.NetMessage.ServerMsg.Types.EnterBattle.Parser, new[]{ "Host", "Port" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GPW.NetMessage.ClientMsg), global::GPW.NetMessage.ClientMsg.Parser, new[]{ "DataType", "Param" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgType {
    [pbr::OriginalName("MSG_HEART_BEAT")] MsgHeartBeat = 0,
    [pbr::OriginalName("MSG_ROLE_INFO")] MsgRoleInfo = 1,
    [pbr::OriginalName("MSG_ITEMS")] MsgItems = 2,
  }

  public enum ErrorType {
    [pbr::OriginalName("ERR_NOERR")] ErrNoerr = 0,
    [pbr::OriginalName("ERR_UNKNOWN")] ErrUnknown = 1,
  }

  #endregion

  #region Messages
  public sealed partial class ServerInfoList : pb::IMessage<ServerInfoList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerInfoList> _parser = new pb::MessageParser<ServerInfoList>(() => new ServerInfoList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerInfoList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GPW.NetMessage.NetmessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfoList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfoList(ServerInfoList other) : this() {
      serverInfos_ = other.serverInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfoList Clone() {
      return new ServerInfoList(this);
    }

    /// <summary>Field number for the "serverInfos" field.</summary>
    public const int ServerInfosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GPW.NetMessage.ServerInfoList.Types.ServerInfo> _repeated_serverInfos_codec
        = pb::FieldCodec.ForMessage(10, global::GPW.NetMessage.ServerInfoList.Types.ServerInfo.Parser);
    private readonly pbc::RepeatedField<global::GPW.NetMessage.ServerInfoList.Types.ServerInfo> serverInfos_ = new pbc::RepeatedField<global::GPW.NetMessage.ServerInfoList.Types.ServerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GPW.NetMessage.ServerInfoList.Types.ServerInfo> ServerInfos {
      get { return serverInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerInfoList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerInfoList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!serverInfos_.Equals(other.serverInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= serverInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      serverInfos_.WriteTo(output, _repeated_serverInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      serverInfos_.WriteTo(ref output, _repeated_serverInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += serverInfos_.CalculateSize(_repeated_serverInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerInfoList other) {
      if (other == null) {
        return;
      }
      serverInfos_.Add(other.serverInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            serverInfos_.AddEntriesFrom(input, _repeated_serverInfos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            serverInfos_.AddEntriesFrom(ref input, _repeated_serverInfos_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ServerInfoList message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ServerInfo : pb::IMessage<ServerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ServerInfo> _parser = new pb::MessageParser<ServerInfo>(() => new ServerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ServerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GPW.NetMessage.ServerInfoList.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServerInfo(ServerInfo other) : this() {
          name_ = other.name_;
          desc_ = other.desc_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServerInfo Clone() {
          return new ServerInfo(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "desc" field.</summary>
        public const int DescFieldNumber = 2;
        private string desc_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Desc {
          get { return desc_; }
          set {
            desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ServerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ServerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Desc != other.Desc) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Desc.Length != 0) hash ^= Desc.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Desc.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Desc);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Desc.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Desc);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Desc.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ServerInfo other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Desc.Length != 0) {
            Desc = other.Desc;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Desc = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Desc = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class ServerMsg : pb::IMessage<ServerMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerMsg> _parser = new pb::MessageParser<ServerMsg>(() => new ServerMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GPW.NetMessage.NetmessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMsg(ServerMsg other) : this() {
      dataType_ = other.dataType_;
      errorType_ = other.errorType_;
      sequence_ = other.sequence_;
      heartBeat_ = other.heartBeat_ != null ? other.heartBeat_.Clone() : null;
      roleInfo_ = other.roleInfo_ != null ? other.roleInfo_.Clone() : null;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      enterBattle_ = other.enterBattle_ != null ? other.enterBattle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMsg Clone() {
      return new ServerMsg(this);
    }

    /// <summary>Field number for the "dataType" field.</summary>
    public const int DataTypeFieldNumber = 1;
    private global::GPW.NetMessage.MsgType dataType_ = global::GPW.NetMessage.MsgType.MsgHeartBeat;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GPW.NetMessage.MsgType DataType {
      get { return dataType_; }
      set {
        dataType_ = value;
      }
    }

    /// <summary>Field number for the "errorType" field.</summary>
    public const int ErrorTypeFieldNumber = 2;
    private global::GPW.NetMessage.ErrorType errorType_ = global::GPW.NetMessage.ErrorType.ErrNoerr;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GPW.NetMessage.ErrorType ErrorType {
      get { return errorType_; }
      set {
        errorType_ = value;
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 3;
    private ulong sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "heartBeat" field.</summary>
    public const int HeartBeatFieldNumber = 100;
    private global::GPW.NetMessage.ServerMsg.Types.HeartBeat heartBeat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GPW.NetMessage.ServerMsg.Types.HeartBeat HeartBeat {
      get { return heartBeat_; }
      set {
        heartBeat_ = value;
      }
    }

    /// <summary>Field number for the "roleInfo" field.</summary>
    public const int RoleInfoFieldNumber = 101;
    private global::GPW.NetMessage.ServerMsg.Types.RoleInfo roleInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GPW.NetMessage.ServerMsg.Types.RoleInfo RoleInfo {
      get { return roleInfo_; }
      set {
        roleInfo_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 102;
    private global::GPW.NetMessage.ServerMsg.Types.Item item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GPW.NetMessage.ServerMsg.Types.Item Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "enterBattle" field.</summary>
    public const int EnterBattleFieldNumber = 103;
    private global::GPW.NetMessage.ServerMsg.Types.EnterBattle enterBattle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GPW.NetMessage.ServerMsg.Types.EnterBattle EnterBattle {
      get { return enterBattle_; }
      set {
        enterBattle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataType != other.DataType) return false;
      if (ErrorType != other.ErrorType) return false;
      if (Sequence != other.Sequence) return false;
      if (!object.Equals(HeartBeat, other.HeartBeat)) return false;
      if (!object.Equals(RoleInfo, other.RoleInfo)) return false;
      if (!object.Equals(Item, other.Item)) return false;
      if (!object.Equals(EnterBattle, other.EnterBattle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataType != global::GPW.NetMessage.MsgType.MsgHeartBeat) hash ^= DataType.GetHashCode();
      if (ErrorType != global::GPW.NetMessage.ErrorType.ErrNoerr) hash ^= ErrorType.GetHashCode();
      if (Sequence != 0UL) hash ^= Sequence.GetHashCode();
      if (heartBeat_ != null) hash ^= HeartBeat.GetHashCode();
      if (roleInfo_ != null) hash ^= RoleInfo.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (enterBattle_ != null) hash ^= EnterBattle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DataType != global::GPW.NetMessage.MsgType.MsgHeartBeat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DataType);
      }
      if (ErrorType != global::GPW.NetMessage.ErrorType.ErrNoerr) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ErrorType);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Sequence);
      }
      if (heartBeat_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(HeartBeat);
      }
      if (roleInfo_ != null) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(RoleInfo);
      }
      if (item_ != null) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(Item);
      }
      if (enterBattle_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(EnterBattle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DataType != global::GPW.NetMessage.MsgType.MsgHeartBeat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DataType);
      }
      if (ErrorType != global::GPW.NetMessage.ErrorType.ErrNoerr) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ErrorType);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Sequence);
      }
      if (heartBeat_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(HeartBeat);
      }
      if (roleInfo_ != null) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(RoleInfo);
      }
      if (item_ != null) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(Item);
      }
      if (enterBattle_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(EnterBattle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataType != global::GPW.NetMessage.MsgType.MsgHeartBeat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataType);
      }
      if (ErrorType != global::GPW.NetMessage.ErrorType.ErrNoerr) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorType);
      }
      if (Sequence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sequence);
      }
      if (heartBeat_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(HeartBeat);
      }
      if (roleInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoleInfo);
      }
      if (item_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (enterBattle_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EnterBattle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerMsg other) {
      if (other == null) {
        return;
      }
      if (other.DataType != global::GPW.NetMessage.MsgType.MsgHeartBeat) {
        DataType = other.DataType;
      }
      if (other.ErrorType != global::GPW.NetMessage.ErrorType.ErrNoerr) {
        ErrorType = other.ErrorType;
      }
      if (other.Sequence != 0UL) {
        Sequence = other.Sequence;
      }
      if (other.heartBeat_ != null) {
        if (heartBeat_ == null) {
          HeartBeat = new global::GPW.NetMessage.ServerMsg.Types.HeartBeat();
        }
        HeartBeat.MergeFrom(other.HeartBeat);
      }
      if (other.roleInfo_ != null) {
        if (roleInfo_ == null) {
          RoleInfo = new global::GPW.NetMessage.ServerMsg.Types.RoleInfo();
        }
        RoleInfo.MergeFrom(other.RoleInfo);
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::GPW.NetMessage.ServerMsg.Types.Item();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.enterBattle_ != null) {
        if (enterBattle_ == null) {
          EnterBattle = new global::GPW.NetMessage.ServerMsg.Types.EnterBattle();
        }
        EnterBattle.MergeFrom(other.EnterBattle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DataType = (global::GPW.NetMessage.MsgType) input.ReadEnum();
            break;
          }
          case 16: {
            ErrorType = (global::GPW.NetMessage.ErrorType) input.ReadEnum();
            break;
          }
          case 24: {
            Sequence = input.ReadUInt64();
            break;
          }
          case 802: {
            if (heartBeat_ == null) {
              HeartBeat = new global::GPW.NetMessage.ServerMsg.Types.HeartBeat();
            }
            input.ReadMessage(HeartBeat);
            break;
          }
          case 810: {
            if (roleInfo_ == null) {
              RoleInfo = new global::GPW.NetMessage.ServerMsg.Types.RoleInfo();
            }
            input.ReadMessage(RoleInfo);
            break;
          }
          case 818: {
            if (item_ == null) {
              Item = new global::GPW.NetMessage.ServerMsg.Types.Item();
            }
            input.ReadMessage(Item);
            break;
          }
          case 826: {
            if (enterBattle_ == null) {
              EnterBattle = new global::GPW.NetMessage.ServerMsg.Types.EnterBattle();
            }
            input.ReadMessage(EnterBattle);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DataType = (global::GPW.NetMessage.MsgType) input.ReadEnum();
            break;
          }
          case 16: {
            ErrorType = (global::GPW.NetMessage.ErrorType) input.ReadEnum();
            break;
          }
          case 24: {
            Sequence = input.ReadUInt64();
            break;
          }
          case 802: {
            if (heartBeat_ == null) {
              HeartBeat = new global::GPW.NetMessage.ServerMsg.Types.HeartBeat();
            }
            input.ReadMessage(HeartBeat);
            break;
          }
          case 810: {
            if (roleInfo_ == null) {
              RoleInfo = new global::GPW.NetMessage.ServerMsg.Types.RoleInfo();
            }
            input.ReadMessage(RoleInfo);
            break;
          }
          case 818: {
            if (item_ == null) {
              Item = new global::GPW.NetMessage.ServerMsg.Types.Item();
            }
            input.ReadMessage(Item);
            break;
          }
          case 826: {
            if (enterBattle_ == null) {
              EnterBattle = new global::GPW.NetMessage.ServerMsg.Types.EnterBattle();
            }
            input.ReadMessage(EnterBattle);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ServerMsg message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class HeartBeat : pb::IMessage<HeartBeat>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<HeartBeat> _parser = new pb::MessageParser<HeartBeat>(() => new HeartBeat());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HeartBeat> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GPW.NetMessage.ServerMsg.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeartBeat() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeartBeat(HeartBeat other) : this() {
          serverID_ = other.serverID_;
          serverTime_ = other.serverTime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HeartBeat Clone() {
          return new HeartBeat(this);
        }

        /// <summary>Field number for the "serverID" field.</summary>
        public const int ServerIDFieldNumber = 1;
        private uint serverID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ServerID {
          get { return serverID_; }
          set {
            serverID_ = value;
          }
        }

        /// <summary>Field number for the "serverTime" field.</summary>
        public const int ServerTimeFieldNumber = 2;
        private ulong serverTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ServerTime {
          get { return serverTime_; }
          set {
            serverTime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as HeartBeat);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HeartBeat other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ServerID != other.ServerID) return false;
          if (ServerTime != other.ServerTime) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ServerID != 0) hash ^= ServerID.GetHashCode();
          if (ServerTime != 0UL) hash ^= ServerTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ServerID != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(ServerID);
          }
          if (ServerTime != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(ServerTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ServerID != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(ServerID);
          }
          if (ServerTime != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(ServerTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ServerID != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerID);
          }
          if (ServerTime != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ServerTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HeartBeat other) {
          if (other == null) {
            return;
          }
          if (other.ServerID != 0) {
            ServerID = other.ServerID;
          }
          if (other.ServerTime != 0UL) {
            ServerTime = other.ServerTime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ServerID = input.ReadUInt32();
                break;
              }
              case 16: {
                ServerTime = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ServerID = input.ReadUInt32();
                break;
              }
              case 16: {
                ServerTime = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class RoleInfo : pb::IMessage<RoleInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RoleInfo> _parser = new pb::MessageParser<RoleInfo>(() => new RoleInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RoleInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GPW.NetMessage.ServerMsg.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoleInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoleInfo(RoleInfo other) : this() {
          roleID_ = other.roleID_;
          name_ = other.name_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoleInfo Clone() {
          return new RoleInfo(this);
        }

        /// <summary>Field number for the "roleID" field.</summary>
        public const int RoleIDFieldNumber = 1;
        private ulong roleID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong RoleID {
          get { return roleID_; }
          set {
            roleID_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RoleInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RoleInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RoleID != other.RoleID) return false;
          if (Name != other.Name) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RoleID != 0UL) hash ^= RoleID.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (RoleID != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(RoleID);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (RoleID != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(RoleID);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RoleID != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RoleID);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RoleInfo other) {
          if (other == null) {
            return;
          }
          if (other.RoleID != 0UL) {
            RoleID = other.RoleID;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                RoleID = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                RoleID = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Item : pb::IMessage<Item>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Item> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GPW.NetMessage.ServerMsg.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item(Item other) : this() {
          id_ = other.id_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item Clone() {
          return new Item(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private ulong id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Item);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Item other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0UL) hash ^= Id.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Id != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Id != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Item other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0UL) {
            Id = other.Id;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Id = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class EnterBattle : pb::IMessage<EnterBattle>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EnterBattle> _parser = new pb::MessageParser<EnterBattle>(() => new EnterBattle());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EnterBattle> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GPW.NetMessage.ServerMsg.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnterBattle() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnterBattle(EnterBattle other) : this() {
          host_ = other.host_;
          port_ = other.port_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnterBattle Clone() {
          return new EnterBattle(this);
        }

        /// <summary>Field number for the "host" field.</summary>
        public const int HostFieldNumber = 1;
        private string host_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Host {
          get { return host_; }
          set {
            host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "port" field.</summary>
        public const int PortFieldNumber = 2;
        private int port_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Port {
          get { return port_; }
          set {
            port_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EnterBattle);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EnterBattle other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Host != other.Host) return false;
          if (Port != other.Port) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Host.Length != 0) hash ^= Host.GetHashCode();
          if (Port != 0) hash ^= Port.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Host.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Host);
          }
          if (Port != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Port);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Host.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Host);
          }
          if (Port != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Port);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Host.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
          }
          if (Port != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EnterBattle other) {
          if (other == null) {
            return;
          }
          if (other.Host.Length != 0) {
            Host = other.Host;
          }
          if (other.Port != 0) {
            Port = other.Port;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Host = input.ReadString();
                break;
              }
              case 16: {
                Port = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Host = input.ReadString();
                break;
              }
              case 16: {
                Port = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class ClientMsg : pb::IMessage<ClientMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientMsg> _parser = new pb::MessageParser<ClientMsg>(() => new ClientMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GPW.NetMessage.NetmessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMsg(ClientMsg other) : this() {
      dataType_ = other.dataType_;
      param_ = other.param_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMsg Clone() {
      return new ClientMsg(this);
    }

    /// <summary>Field number for the "dataType" field.</summary>
    public const int DataTypeFieldNumber = 1;
    private global::GPW.NetMessage.MsgType dataType_ = global::GPW.NetMessage.MsgType.MsgHeartBeat;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GPW.NetMessage.MsgType DataType {
      get { return dataType_; }
      set {
        dataType_ = value;
      }
    }

    /// <summary>Field number for the "param" field.</summary>
    public const int ParamFieldNumber = 2;
    private ulong param_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Param {
      get { return param_; }
      set {
        param_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataType != other.DataType) return false;
      if (Param != other.Param) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataType != global::GPW.NetMessage.MsgType.MsgHeartBeat) hash ^= DataType.GetHashCode();
      if (Param != 0UL) hash ^= Param.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DataType != global::GPW.NetMessage.MsgType.MsgHeartBeat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DataType);
      }
      if (Param != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Param);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DataType != global::GPW.NetMessage.MsgType.MsgHeartBeat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DataType);
      }
      if (Param != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Param);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataType != global::GPW.NetMessage.MsgType.MsgHeartBeat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataType);
      }
      if (Param != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Param);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientMsg other) {
      if (other == null) {
        return;
      }
      if (other.DataType != global::GPW.NetMessage.MsgType.MsgHeartBeat) {
        DataType = other.DataType;
      }
      if (other.Param != 0UL) {
        Param = other.Param;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DataType = (global::GPW.NetMessage.MsgType) input.ReadEnum();
            break;
          }
          case 16: {
            Param = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DataType = (global::GPW.NetMessage.MsgType) input.ReadEnum();
            break;
          }
          case 16: {
            Param = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
